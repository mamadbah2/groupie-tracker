{{template "base" .}}

{{define "content"}}

<main>
    <div class="nameImg">
        <div class="profil">
            <img src="{{ .Artist.Image }}" alt="Image de profil">
        </div>
        <h1> <span>{{ .Artist.Name }}</span> </h1>
    </div>
    <div class="members">
        <h2><span>Members</span></h2>
        <ul>
            {{ range .Artist.Members }}
            <li> {{ . }} </li>
            {{ end }}
        </ul>
    </div>
    <div class="infos">
        <h2><span>Infos</span></h2>
        <div>
            <span><strong>CreationDate : </strong> {{ .Artist.CreationDate }} </span><br>
            <span><strong>FirstAlbum : </strong> {{ .Artist.FirstAlbum }} </span>
        </div>
    </div>
    <div class="dateLocaton">
        <h2><span>Relation</span></h2>
        {{ range $key, $value := .Relation.DatesLocations }}
        <div>
            <strong> {{$key}} :</strong>
            <ul>
                {{ range $value}}
                <li> {{.}} </li>
                {{end}}

            </ul>
        </div>
        {{end}}
    </div>
    <div class="coordinate" style="display: flex; flex-wrap: wrap;">
        <ul style="padding: 10px; list-style: none">
            <h3><span>Ville</span></h3>
            {{ range $key, $value := .Relation.DatesLocations }}

            <li> {{$key}} </li>

            {{end}}
        </ul>
        <ul style="padding: 10px; list-style: none">
            <h3><span>Latitude</span></h3>
            {{ range .Coordinate.Lat}}

            <li> {{.}} </li>

            {{end}}
        </ul>
        <ul style="padding: 10px;list-style: none">
            <h3><span>Longitude</span></h3>
            {{ range .Coordinate.Lng}}

            <li> {{.}} </li>

            {{end}}
        </ul>

    </div>

    <div id="map" style="width: 100%; height: 530px;"></div>
</main>

<script src="https://api.mqcdn.com/sdk/mapquest-js/v1.3.2/mapquest.js"></script>

<script type="text/javascript">
    window.onload = function () {
        L.mapquest.key = 'LxqL2Zy8AMyJhz1aVcLPd43rMTiaLydz';

        // Geocode three locations, then call the createMap callback
        L.mapquest.geocoding().geocode([
            {{ range $key, $value:= .Relation.DatesLocations }}

                '{{ $key }}', 

            {{ end }}
        ], createMap);

    function createMap(error, response) {
        // Initialize the Map
        var map = L.mapquest.map('map', {
            layers: L.mapquest.tileLayer('map'),
            center: [0, 0],
            zoom: 12
        });

        // Generate the feature group containing markers from the geocoded locations
        var featureGroup = generateMarkersFeatureGroup(response);

        // Add markers to the map and zoom to the features
        featureGroup.addTo(map);
        map.fitBounds(featureGroup.getBounds());
    }

    function generateMarkersFeatureGroup(response) {
        var group = [];
        for (var i = 0; i < response.results.length; i++) {
            var location = response.results[i].locations[0];
            var locationLatLng = location.latLng;

            // Create a marker for each location
            var marker = L.marker(locationLatLng, { icon: L.mapquest.icons.marker() })
                .bindPopup(location.adminArea5 + ', ' + location.adminArea3);

            group.push(marker);
        }
        return L.featureGroup(group);
    }
    }
</script>
{{end}}